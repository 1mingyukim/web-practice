/* 하나의 큰 div 안에 여러개의 div 가 들어있는 구조로 시작 */

/* position 속성은 요소들이 화면에 어떻게 배치될지를 지정합니다.
특이사항으로는, 이 속성은 자식 요소에게 대물림되지 않는다는 점이 있습니다.
static은 기본값으로, 전적으로 페이지의 흐름을 따르며
top, bottom, left, right, z-index 속성의 영향을 받지 않습니다. */

/* relative 값은 원래 위치를 기준으로 top~right 속성값이 적용되도록 합니다.
요소의 위치는 이동하지만 요소가 차지하는 공백의 위치는 유지됩니다. */

.container {
  width: 518px;
  border: 2px solid #ddd;
  padding: 12px 0 0 12px;
  position: relative;
}
.container > div {
  display: inline-block;
  width: 160px;
  height: 160px;
  margin: 0 8px 5px 0;
  background-color: lightgray;
}
.container > div.orange {
  background-color: gold;
  box-shadow: 0 0 6px rgba(0, 0, 0, 0.33);
}
.red {
  width: 48px;
  height: 48px;
  background-color: orangered;
}
/* absolute 값은 static이 아닌 첫 부모 요소를 기준으로
top~right을 사용하여 위치를 조정할 수 있습니다.
요소는 페이지의 문서 흐름에서 벗어나, 자리를 차지하지 않게 됩니다.
(위의 바깥쪽 div는 포지션이 relative로 되어 있습니다.) 그래서 relative 부모를 기준으로 배치하며 만약 부모가 static 일 경우 화면 맨 바깥 기준으로 배치 */

/* 포지션이 static이면 absolute의 기준이 될 수 없음. */
/* 흐름을 넘어가서 내가 원하는 곳으로 가겠다. 의미 다른이미지를 덮거나 그러기도 함 */

/* fixed는 부모 요소가 아닌 viewport(전체화면)를 기준으로 위치를 지정합니다.
(중요!)스크롤에 영향을 받지 않으므로, 다이얼로그 팝업처럼 움직이지 않는
요소들에 유용하게 사용될 수 있습니다.
그래서 화면 테두리 기준으로 움직임 */

/* sticky는 요소가 스크롤로 이동할 수 있는 공간을 top~right 속성으로
제한할 수 있습니다. 
지정 픽셀 넘어로 스크롤 하면 따라가짐 그리고 기본적으로 패딩 값 만큼 밀려남.ex)0px주면 패딩값만큼 기본적으로 밀려남
(중요!)부모요소 크기 밖으로는 벗어날 수 없음*/




body { margin: 0; }
#ex{
  width: 300px;
  height: 80px;
  line-height: 80px;
  text-align: center;
  background-color: skyblue;
  position: absolute;
  top:calc(50% - 40px);
  right: calc(50% - 150px);
}
.eg{
  width: 300px;
  height: 300px;
  line-height: 30px;
  text-align: center;
  background-color: blue;
  position: absolute;
  top: 50%;
  left: 20%;
  z-index: -1;
}

/* 뒤에 오는게 우선순위가 높아 blue div 가 더 위에 배치. 하지만 직접 순서를 줌으로써 변경.
z-index: -1 */

/* 그냥 50% 50% 줬더니 중간 배치가 안됨. 왜?? width하고 height가 달라서. */
/* (중요!)지금은 이렇게 하지만 나중에 플렉스 배우면 중앙배치 훨 쉬움. 지금처럼 값을 몰라도 댐 */

/* z-index 속성은 static이 아닌 요소들간
위아래 배치 순서를 지정합니다.

auto는 0과 같으며, 같은 값의 요소들 중에는
나중에 배치된 것이 위로 올라오게 됩니다.*/

/*현재 이 3개 div는 모두 포지션이 absolute입니다.*/